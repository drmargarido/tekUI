
#------------------------------------------------------------------------------
# Platform to build against [Choices: posix, winnt]:
#------------------------------------------------------------------------------

PLATFORM ?= posix

#------------------------------------------------------------------------------
# Dynamic link library extension [Choices: .so, .dll]:
#------------------------------------------------------------------------------

DLLEXT = .so

#------------------------------------------------------------------------------
# Default display driver [Choices: x11, rawfb, directfb, windows]:
# If you change it, also adjust src/Makefile and tek/lib/Makefile.
#------------------------------------------------------------------------------

DISPLAY_DRIVER ?= x11

#------------------------------------------------------------------------------
# tekUI features:
# ENABLE_GRADIENT - enable color gradients
# ENABLE_PNG - enable PNG support through libpng
# ENABLE_FILENO - dispatches lines from a fd (normally stdin) to MSG_USER.
# ENABLE_DGRAM - enables a datagram server on 127.0.0.1:20000 for the same.
#------------------------------------------------------------------------------

TEKUI_DEFS = -DENABLE_GRADIENT -DENABLE_FILENO # -DENABLE_PNG -DENABLE_DGRAM=20000

#------------------------------------------------------------------------------
# Compiler configuration:
#------------------------------------------------------------------------------

# CCPREFIX =
CC = $(CCPREFIX)gcc -fpic

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# For Windows using MingW:
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# CC = $(CCPREFIX)gcc -mno-cygwin -DWIN32

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Cross-build using MingW:
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# CCPREFIX = i586-mingw32-

#------------------------------------------------------------------------------
# Platform libraries:
#------------------------------------------------------------------------------

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# POSIX:
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

PLATFORM_LIBS = -pthread
# VISUAL_LIBS = -lpng

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Windows:
# (Assuming that lua51.dll is in the top-level directory of the distribution)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# PLATFORM_LIBS = -lmsvcrt -lkernel32 -lwinmm -luser32 -lshell32 -ladvapi32
# LUA_LIBS = -L $(BASEDIR) -llua51

#------------------------------------------------------------------------------
# Installation and system paths:
# (Installation is not always required, e.g. x11 and windows can do without)
#------------------------------------------------------------------------------

PREFIX ?= /usr/local
LUA_LIB = $(PREFIX)/lib/lua/5.1
LUA_SHARE = $(PREFIX)/share/lua/5.1
SYS_LUA_LIB = $(PREFIX)/lib/lua/5.1
SYS_LUA_SHARE = $(PREFIX)/share/lua/5.1

#------------------------------------------------------------------------------
# Other libraries:
#------------------------------------------------------------------------------

LUA_DEFS = -I$(PREFIX)/include -I/usr/local/include/lua51 -I/usr/include/lua5.1

FREETYPE_LIBS = -L$(PREFIX)/lib -lfreetype
FREETYPE_DEFS = -I$(PREFIX)/include -I$(PREFIX)/include/freetype2 -I/usr/include/freetype2 -I/usr/X11R6/include/freetype2

X11_LIBS = -L/usr/X11R6/lib -LX11 -lXext -lXxf86vm
X11_DEFS = -I/usr/X11R6/include $(FREETYPE_DEFS) -D_XOPEN_SOURCE -DENABLE_XFT -DENABLE_XVID

WIN_LIBS = $(PLATFORM_LIBS) -lgdi32

# VNCSERVER_LIBS = -L$(PREFIX)/lib -lvncserver
# VNCSERVER_DEFS = -DENABLE_VNCSERVER -I$(PREFIX)/include -DENABLE_VNCSERVER_COPYRECT
RAWFB_SUB_LIBS = -ldisplay_x11 $(X11_LIBS)
RAWFB_SUB_DEFS = -DRFB_RENDER_DEVICE=x11 # -DRFB_DEPTH_24BIT
RAWFB_LIBS = $(FREETYPE_LIBS) $(RAWFB_SUB_LIBS) $(VNCSERVER_LIBS)
RAWFB_DEFS = $(FREETYPE_DEFS) $(RAWFB_SUB_DEFS) $(VNCSERVER_DEFS) # -DFNT_DEFDIR=\"$(SYS_LUA_SHARE)/tek/ui/font\"
# Comment out RAWFB_SUB for a 'headless' GUI. VNC support makes this software
# a combined work with LibVNCServer, see also src/display_rawfb/vnc/COPYING

DFB_LIBS = `pkg-config --libs directfb`
DFB_DEFS = $(FREETYPE_DEFS) `pkg-config --cflags directfb`

#------------------------------------------------------------------------------
# Build paths:
#------------------------------------------------------------------------------

BASEDIR ?= .
INCDIR = $(BASEDIR)/include
LIBDIR = $(BASEDIR)/lib/$(PLATFORM)
OBJDIR = build/$(PLATFORM)
BINDIR = $(BASEDIR)/bin
MODDIR = $(BINDIR)/mod

#------------------------------------------------------------------------------
# Compiler flags:
#------------------------------------------------------------------------------

# DEBUG = -g -DTDEBUG=5
WARN = -Wall -Wextra -Wno-unused-parameter -Wno-unused-function -Wno-long-long
OPT = -O2 -fno-strict-aliasing
INCL = -I. -Iinclude -I$(INCDIR)
LIBCFLAGS = $(DEBUG) $(WARN) $(OPT) $(INCL) $(EXTRADEFS)
MODCFLAGS = -shared -L $(LIBDIR)
BINCFLAGS = $(DEBUG) $(WARN) $(OPT) $(INCL) $(EXTRADEFS)

#------------------------------------------------------------------------------
# Build tools:
#------------------------------------------------------------------------------

AR = $(CCPREFIX)ar rcu
RM = rm
RMDIR = rm -r
MKDIR = mkdir -p
ECHO = echo
INSTALL_B = install
INSTALL_F = install
INSTALL_D = install -d
INSTALL_S = install -s

#------------------------------------------------------------------------------
# Predefined targets:
#------------------------------------------------------------------------------

default-help:
	@echo "==============================================================================="
	@echo "Default build targets:"
	@echo "-------------------------------------------------------------------------------"
	@echo "all ..................... build everything that is needed"
	@echo "libs .................... build libraries"
	@echo "modules ................. build shared objects"
#	@echo "tools ................... build executables"
	@echo "install ................. install modules globally"
	@echo "clean ................... delete temporary files"
	@echo "help .................... show these and all extra targets for this Makefile"
	@echo "==============================================================================="

FORCE:

$(BINDIR):
	-$(MKDIR) $@
$(MODDIR):
	-$(MKDIR) $@
$(LIBDIR):
	-$(MKDIR) $@
$(OBJDIR):
	-$(MKDIR) $@
