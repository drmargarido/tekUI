
#------------------------------------------------------------------------------
# Platform to build against [Choices: posix, winnt]:
#------------------------------------------------------------------------------

PLATFORM ?= posix

#------------------------------------------------------------------------------
# Dynamic link library extension [Choices: .so, .dll]:
#------------------------------------------------------------------------------

DLLEXT = .so

#------------------------------------------------------------------------------
# Default display driver [Choices: x11, windows, directfb, nanox, rawfb]:
# (If you change it, also adjust src/Makefile and tek/lib/Makefile)
#------------------------------------------------------------------------------

DISPLAY_DRIVER ?= x11

#------------------------------------------------------------------------------
# Compiler configuration:
#------------------------------------------------------------------------------

CCPREFIX =
CC = $(CCPREFIX)gcc -fpic

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# For Windows using MingW:
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# CC = $(CCPREFIX)gcc -mno-cygwin -DWIN32

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Cross-build using MingW:
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# CCPREFIX = i586-mingw32-

#------------------------------------------------------------------------------
# Platform libraries:
#------------------------------------------------------------------------------

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# POSIX:
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

PLATFORM_LIBS = -pthread

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Windows:
# (Assuming that lua51.dll is in the top-level directory of the distribution)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# PLATFORM_LIBS = -lmsvcrt -lkernel32 -lwinmm -luser32 -lshell32 -ladvapi32
# LUA_DLLS = -L $(BASEDIR) -llua51


#------------------------------------------------------------------------------
# The basic setup should be complete up to this point.
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
# Other libraries:
#------------------------------------------------------------------------------

LUA_DEFS = -I/usr/local/include/lua51 -I/usr/include/lua5.1 -I/usr/local/include

FREETYPE_DEFS = -I/usr/include/freetype2 -I/usr/X11R6/include/freetype2

X11_LIBS = -L/usr/X11R6/lib -LX11 -lXext -lXxf86vm
X11_DEFS = -I/usr/X11R6/include $(FREETYPE_DEFS) -D_XOPEN_SOURCE -DENABLE_XFT -DENABLE_XVID -DENABLE_STDIN

DFB_LIBS = `pkg-config --libs directfb`
DFB_DEFS = $(FREETYPE_DEFS) `pkg-config --cflags directfb`

WIN_LIBS = $(PLATFORM_LIBS) -lgdi32

RAWFB_LIBS = -lfreetype -ldisplay_x11 $(X11_LIBS)
RAWFB_DEFS = $(FREETYPE_DEFS)

NANOX_LIBS = -L /work/nano-x/dev/src/lib -lnano-X
NANOX_DEFS = -I /work/nano-x/dev/src/include -DENABLE_STDIN

#------------------------------------------------------------------------------
# Installation paths:
# (Installation is not always required, e.g. x11 and windows can do without)
#------------------------------------------------------------------------------

LUA_LIB = /usr/local/lib/lua/5.1
LUA_SHARE = /usr/local/share/lua/5.1

#------------------------------------------------------------------------------
# Build paths:
#------------------------------------------------------------------------------

BASEDIR ?= .
INCDIR = $(BASEDIR)/include
LIBDIR = $(BASEDIR)/lib/$(PLATFORM)
OBJDIR = build/$(PLATFORM)
BINDIR = $(BASEDIR)/bin
MODDIR = $(BINDIR)/mod

#------------------------------------------------------------------------------
# Compiler flags:
#------------------------------------------------------------------------------

# DEBUG = -g -DTDEBUG=5
WARN = -Wall -Wextra -Wno-unused-parameter -Wno-unused-function
OPT = -O1
INCL = -I. -Iinclude -I$(INCDIR)
LIBCFLAGS = $(DEBUG) $(WARN) $(OPT) $(INCL) $(EXTRADEFS)
MODCFLAGS = -shared -L $(LIBDIR)
BINCFLAGS = $(DEBUG) $(WARN) $(OPT) $(INCL) $(EXTRADEFS)

#------------------------------------------------------------------------------
# Build tools:
#------------------------------------------------------------------------------

AR = $(CCPREFIX)ar r
RM = rm
RMDIR = rm -r
MKDIR = mkdir -p
ECHO = echo
INSTALL = install

#------------------------------------------------------------------------------
# Predefined targets:
#------------------------------------------------------------------------------

default-help:
	@echo "==============================================================================="
	@echo "Default build targets:"
	@echo "-------------------------------------------------------------------------------"
	@echo "all ..................... build everything that is needed"
	@echo "libs .................... build libraries"
	@echo "modules ................. build shared objects"
#	@echo "tools ................... build executables"
	@echo "install ................. install modules globally"
	@echo "clean ................... delete temporary files"
	@echo "help .................... show these and all extra targets for this Makefile"
	@echo "==============================================================================="

FORCE:

$(BINDIR):
	-$(MKDIR) $@
$(MODDIR):
	-$(MKDIR) $@
$(LIBDIR):
	-$(MKDIR) $@
$(OBJDIR):
	-$(MKDIR) $@
