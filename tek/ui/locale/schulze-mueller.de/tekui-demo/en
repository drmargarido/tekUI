
--
--	tekUI demo - English locale
--	Note: Use UTF-8 encoding for international characters
--

ABOUT_APPLICATION = "_Application";
ABOUT_APPLICATION_INFORMATION = "Application Information";
ABOUT_LICENSE = "_License";
ABOUT_SYSTEM = "_System";
ABOUT_TEKUI = "About tekUI";
ALIGNMENT_BUTTON = "Alignment";
ALIGNMENT_DESCRIPTION = [[
» Certain attributes determine how elements are aligned if they do not fill up the space inside their group.
]];
ALIGNMENT_TITLE = "Alignment";
ALIGN_HORIZONTAL = "Align Horizontal";
ALIGN_VERTICAL = "Align Vertical";
ANIMATIONS_BUTTON = "Animations";
ANIMATIONS_DESCRIPTION = [[
» tekUI supports an interval timer, which any GUI element can attach itself to.

» It provides a stable timer event source, which can be used for animated classes, multimedia controls and smooth animations.

» The timer interval is initiated by the first element that requests it. tekUI is strictly event-driven and consumes zero CPU time when idle.

» Lua's register-based virtual machine is small (less than 100K) and very fast. It is actually faster than most other virtual machines - surpassed e.g. by Java only with JIT execution, which requires a runtime environment 10 to 100 times larger.

» The plasma effect is a class written in pure Lua, running comfortably at 50Hz. Note that Lua and C classes can be interchanged. Performance-critical classes can be ported to C at any point in the development process.
]];
ANIMATIONS_FOCUS = "Focus";
ANIMATIONS_PARAMETERS = "Parameters";
ANIMATIONS_SEGMENTS = "Segments";
ANIMATIONS_SPEED = "Speed";
ANIMATIONS_START = "_Start";
ANIMATIONS_STOP = "Sto_p";
ANIMATIONS_TITLE = "Animations";
AVAILABLE_DEMOS = "Available Demos";
BEGIN = "Begin";
BORDERS_BUTTON = "Borders";
BORDERS_SUB = "Sub Borders";
BORDERS_TITLE = "Borders";
BORDER_CAPTION = "Border Caption";
BORDER_DYNAMIC_THICKNESS = "Dynamic Thickness";
BORDER_FOCUS = "Focus Border";
BORDER_GROOVE = "Groove";
BORDER_INDIVIDUAL_STYLE = "Individual Border Style";
BORDER_INDIVIDUAL_STYLES = "Individual Styles";
BORDER_INSET = "Inset";
BORDER_MAIN = "Main Border";
BORDER_OUTSET = "Outset";
BORDER_RIDGE = "Ridge";
BORDER_RIM = "Rim Border";
BORDER_SOLID = "Solid";
BORDER_WATCH = "Watch Border";
BUTTONS_BUTTON = "Button";
BUTTONS_CAPTION_STYLE = "Captions";
BUTTONS_CENTER = "Center";
BUTTONS_COLORS = "Colors";
BUTTONS_DESCRIPTION = [[
» An element's visual class (and other attributes) determine its appearance and behavior.

» Buttons are actually just Text elements with a button 'Mode' (behavioral attribute) and 'Class' (visual attribute).

» More attributes are available e.g. for the colorization and the alignment of a button's text. Also note that different fonts and texts spanning multiple lines are supported.
]];
BUTTONS_NORMAL_STYLE = "Normal";
BUTTONS_RIGHT_BOTTOM = "Right\nBottom";
BUTTONS_TEXT_ALIGNMENTS = "Text Alignments";
BUTTONS_TITLE = "Buttons";
BUTTONS_TOP_LEFT = "Top\nLeft";
CANCEL = "_Cancel";
CENTER = "Center";
CHOICES_BEER = "_Beer";
CHOICES_COFFEE = "_Coffee";
CHOICES_DRINKING_STRAW = "_Drinking Straw";
CHOICES_HOT = "_Hot";
CHOICES_JUICE = "_Juice";
CHOICES_MANGO_LASSI = "Mango _Lassi";
CHOICES_ORDER_BEVERAGES = "Order Beverages";
CHOICES_SHAKEN = "_Shaken";
CHOICES_STIRRED = "S_tirred";
CHOICES_TITLE = "Choices";
CHOICES_WHISKY = "_Whisky";
CHOICES_WITH_ICE = "With _Ice";
CHOOSE_FILE = "_Choose File";
CLOSE_ALL = "_Close all";
COEFFICIENTS = "Coefficients";
COMMENT = "Comment";
CONFIRM_QUIT_APPLICATION = "Do you really want to quit\nthe application?";
CUSTOMCLASS_ADDRESS = "Address";
CUSTOMCLASS_DESCRIPTION = [[
» Special tasks - like entering valid network numbers using a touchscreen - can be solved with little effort.

» In this example, a 'network' input class was derived from the input class with special behavior for entering IP numbers.

» The keypad buttons a descendants of the Text class, inserting their respective keyboard event into the window's message queue.

» Both problems in this example were solved in a few lines of script using tekUI's 'ad-hoc' class inheritance.
]];
CUSTOMCLASS_DHCP = "Receive automatically (DHCP)";
CUSTOMCLASS_DNS = "DNS";
CUSTOMCLASS_GATEWAY = "Gateway";
CUSTOMCLASS_KEYPAD = "Keypad";
CUSTOMCLASS_NETMASK = "Netmask";
CUSTOMCLASS_NETWORK_CONFIGURATION = "Network Configuration";
CUSTOMCLASS_TITLE = "Custom Class";
DEBUGGING = "Debugging";
DEBUG_CONSOLE = "Debug Console";
DEBUG_LEVEL = "Debug Level";
DEBUG_OPTIONS = "Debug Options";
DISCLAIMER = "Disclaimer";
DISCLAIMER_TEXT = [[
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.]];
END = "End";
FILE_REQUEST = "File Request";
FLOATTEXT_DYNAMIC_LAYOUT = "Dynamic Layout";
FLOATTEXT_PREFORMATTED = "Preformatted";
FLOATTEXT_TITLE = "Floattext",
FLOATTEXT_YOU_CAN_DRAG_THE_BAR = "You can drag the bar between the elements.";
GRAPHICS_BITMAPS = "Bitmaps";
GRAPHICS_CHECKMARKS = "Checkmarks";
GRAPHICS_DESCRIPTION = [[
» tekUI has a built-in scalable vector image class, which is used for standard elements like arrows, checkmarks and radio buttons.

» The scaling and colorization of vector graphics is adaptive to the screen palette and the element size. Also, vector graphics are normally more resource-friendly than bitmaps.

» When an application's layout is finalized and a color scheme is decided, bitmap graphics can be used in place of vector graphics and text, which may give the application a slicker appearance.
]];
GRAPHICS_RADIOBUTTONS = "Radio Buttons";
GRAPHICS_TITLE = "Graphics";
GROUP = "Group";
HELLO = "Hello";
HELLO_WORLD = "Hello, World!";
INTERPRETER_VERSION = "Interpreter Version: %s";
LAYOUT_BALANCING_GROUP = "Balancing Group";
LAYOUT_DIFFERENT_WEIGHTS = "Different Weights";
LAYOUT_FIX = "fix";
LAYOUT_FIXED_VS_FREE = "Fixed vs. Free";
LAYOUT_GRID = "Grid";
LAYOUT_RELATIVE_SIZES = "Relative Sizes";
LAYOUT_SAME_SIZES = "Same Sizes";
LAYOUT_TITLE = "Layout";
LIST_TITLE = "Lists";
LUA_COPYRIGHT_TEXT = [[
Copyright © 1994-2007 Lua.org, PUC-Rio.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.]];
LUA_LICENSE = "Lua License";
LUA_VIRTUAL_MACHINE = "Lua Virtual Machine";
MEMORY_USAGE = "Memory Usage";
MENU_ABOUT = "_About...";
MENU_FILE = "_File";
MENU_QUIT = "_Quit";
MULTISELECT = "_Multiselect";
OKAY = "_Okay";
OPEN_ALL = "_Open all";
OUTPUT = "Output";
PATH = "_Path";
POPUPS_DESCRIPTION = [[
» Popup items and their descendants are recursive and may contain more popups as their children. In fact, popups may contain elements of almost any kind.

» Menus are just groups of the 'Menubar' class with items of the 'MenuItem' type. Other combinations are valid also. It is possible to have more than one menu per screen, and menus in unusual places and orientations.

» Carefully designed delays and tolerances for popping up and snapping back help to improve the feel of the application.
]];
POPUPS_TITLE = "Popups";
PRESENTATION_TITLE = "Presentation";
PROPERTY = "Property";
QUIT = "_Quit";
REVOKED = "Revoked";
SELECTED = "Selected";
SLIDER_CONNECTIONS = "Connections";
SLIDER_CONTINUOUS = "Continuous";
SLIDER_GAUGE = "Gauge";
SLIDER_INTEGER_STEP = "Integer Step";
SLIDER_RANGE = "Range";
SLIDER_SLIDERS = "Sliders";
SLIDER_TITLE = "Sliders";
SLOW_RENDERING = "Slow Rendering";
STATUS = "Status";
SYSTEM_INFORMATION = "System Information";
TEKUI_COPYRIGHT_TEXT = [[
Copyright © 2008, 2009 by the authors:

Timm S. Müller <tmueller@schulze-mueller.de>
Franciska Schulze <fschulze@schulze-mueller.de>

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.]];
TEKUI_DEMO = "tekUI Demo";
TEKUI_LICENSE = "tekUI License";
VALUE = "Value";
